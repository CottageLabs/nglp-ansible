map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server {
    listen 80{% if service.value.get('nginx_default') %} default_server{% endif %};
    listen [::]:80{% if service.get('nginx_default') %} default_server{% endif %};

    server_name {{ service_domain }};

    access_log {{ sites_log_root}}/{{ service_domain }}/access_plain.log;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl{% if service.value.get('nginx_default') %} default_server{% endif %};
    listen [::]:443 ssl{% if service.value.get('nginx_default') %} default_server{% endif %};

    server_name {{ service_domain }};

    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";

    access_log {{ sites_log_root}}/{{ service_domain }}/access_secure.log;

    client_max_body_size 10m;

    location / {
        proxy_pass {{ service.value.scheme }}://localhost:{{ service.value.port }};
{% if service.value.scheme == 'https' %}
        proxy_ssl_trusted_certificate {{ ca_cert_path }};
        proxy_ssl_verify on;
{% endif %}
        proxy_set_header Host $host;
        proxy_redirect http:// https://;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    ssl_certificate /etc/letsencrypt/live/{{ service_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ service_domain }}/privkey.pem;
}
