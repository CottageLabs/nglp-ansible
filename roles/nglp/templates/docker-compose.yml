version: '2.4'
services:
  elasticsearch:
    image: amazon/opendistro-for-elasticsearch:1.13.2
    environment:
      node.name: elasticsearch
      cluster.name: docker-cluster
      discovery.type: single-node
      bootstrap.memory_lock: "true"
      DISABLE_INSTALL_DEMO_CONFIG: "true"
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m -Dlog4j2.formatMsgNoLookups=true"
      network.host: 0.0.0.0 # required if not using the demo security configuration
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
{% for volume_file in docker_services.elasticsearch.volume_files %}
      - ./elasticsearch/{{ volume_file }}:/usr/share/elasticsearch/{{ volume_file }}:Z
{% endfor %}
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elasticsearch
      - keycloak
    depends_on:
      - keycloak
    labels:
      autoheal: "true"
    healthcheck:
      test: [
          "CMD",
          "curl", "-s" ,"-f", "https://elasticsearch:9200/_cat/health",
          "--cacert", "/usr/share/elasticsearch/config/root-ca.pem",
          "-u", "healthcheck:{{ elasticsearch_healthcheck_password }}",
      ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    restart: on-failure

  kibana:
    image: amazon/opendistro-for-elasticsearch-kibana:1.13.2
    environment:
      ELASTICSEARCH_URL: https://elasticsearch:9200
      ELASTICSEARCH_HOSTS: https://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - elasticsearch
      - keycloak
    depends_on:
      - elasticsearch
      - keycloak
    volumes:
      - ./kibana/:/usr/share/kibana/config/:Z
    labels:
      autoheal: "true"
    healthcheck:
      test: ["CMD", "curl", "-s" ,"-f", "http://kibana:5601/auth/openid/login"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 1m30s
    restart: on-failure

  keycloak:
    image: quay.io/keycloak/keycloak:12.0.4
    environment:
      KEYCLOAK_USER: 'admin'
      KEYCLOAK_PASSWORD: '{{ keycloak_admin_password }}'
      KEYCLOAK_FRONTEND_URL: '{{ keycloak_frontend_url }}'
      KEYCLOAK_LOGLEVEL: 'DEBUG'
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: '{{ keycloak_postgres_password }}'
    ports:
      - 8080:8080
    networks:
      - keycloak
      - keycloak-postgres
    depends_on:
      - keycloak-postgres
    labels:
      autoheal: "true"
    healthcheck:
      test: ["CMD", "curl", "-s" , "-f", "http://localhost:8080/auth/realms/master/.well-known/openid-configuration"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 1m30s

  keycloak-postgres:
    image: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: '{{ keycloak_postgres_password }}'
    networks:
      - keycloak-postgres
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data


  janeway:
    build:
      context: https://github.com/NGLPteam/nglp-janeway-docker.git#main
    environment:
      DATABASE_URL: postgres://janeway:{{ janeway_postgres_password }}@janeway-postgres/janeway
    ports:
      - 8000:8000
    volumes:
      - ./janeway/fixtures/:/srv/janeway/fixtures/:Z
    networks:
      - janeway-postgres

  janeway-postgres:
    image: postgres
    environment:
      POSTGRES_DB: janeway
      POSTGRES_USER: janeway
      POSTGRES_PASSWORD: '{{ janeway_postgres_password }}'
    networks:
      - janeway-postgres
    volumes:
      - janeway-postgres-data:/var/lib/postgresql/data


  autoheal:
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

#  grafana:
#    image: grafana/grafana
#    ports:
#      - 3000:3000
#    environment:
#      - TERM=linux
#      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-worldmap-panel,natel-plotly-panel,https://github.com/chartwerk/grafana-chartwerk-app/archive/0.3.2.zip;corpglory-chartwerk-panel,https://github.com/gipong/grafana-groupedbarchart-panel/archive/master.zip;grafana-groupedbarchart-panel
#    volumes:
#      - graf-store:/var/lib/grafana
#    networks:
#      - elastic
#    depends_on:
#      - elasticsearch
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.12.0
#    environment:
#      - NODE_NAME=elasticsearch
#    ports:
#      - 9600:9600
#    networks:
#      - elastic
#    depends_on:
#      - elasticsearch
#

volumes:
  elasticsearch-data:
    driver: local
  keycloak-postgres-data:
    driver: local
  janeway-postgres-data:
    driver: local
#  graf-store:
#    driver: local

networks:
  elasticsearch:
    driver: bridge
  keycloak:
    driver: bridge
  keycloak-postgres:
    driver: bridge
  janeway-postgres:
    driver: bridge

