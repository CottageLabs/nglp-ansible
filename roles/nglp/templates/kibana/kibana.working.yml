server.name: kibana
server.host: "0"

elasticsearch.ssl.certificateAuthorities: ["/usr/share/kibana/config/root-ca.pem"]
#elasticsearch.ssl.verificationMode: full

elasticsearch.hosts:
  - https://elasticsearch:9200/

#{% include "common/opendistro_security.yml" %}

elasticsearch.username: kibanaserver
elasticsearch.password: kibanaserver
elasticsearch.requestHeadersWhitelist: ["securitytenant","Authorization"]

opendistro_security.multitenancy.enabled: true
opendistro_security.multitenancy.tenants.preferred: ["Private", "Global"]
opendistro_security.readonly_mode.roles: ["kibana_read_only"]

# Use this setting if you are running kibana without https
opendistro_security.cookie.secure: false

newsfeed.enabled: false
telemetry.optIn: false
telemetry.enabled: false
security.showInsecureClusterWarning: false
# To configure a WMS map server for use with Kibana, see:
# https://opendistro.github.io/for-elasticsearch-docs/docs/kibana/maptiles/
map.includeElasticMapsService: false



## Enable OpenID authentication
#opendistro_security.auth.type: "openid"
#
## The IdP metadata endpoint
#opendistro_security.openid.connect_url: "{{ keycloak_url }}auth/realms/master/.well-known/openid-configuration"
#
## The ID of the OpenID Connect client in your IdP
#opendistro_security.openid.client_id: "{{ kibana_domain }}"
#
## The client secret of the OpenID Connect client
#opendistro_security.openid.client_secret: "a59c51f5-f052-4740-a3b0-e14ba355b520"

# Use HTTPS instead of HTTP
#elasticsearch.url: "http://es:9200"

## Configure the Kibana internal server user
#elasticsearch.username: "kibanaserver"
#elasticsearch.password: "kibanaserver"

# Disable SSL verification when using self-signed demo certificates
elasticsearch.ssl.verificationMode: none
