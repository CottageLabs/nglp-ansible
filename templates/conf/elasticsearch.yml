cluster.name: "docker-cluster"
network.host: 0.0.0.0

opendistro_security.ssl.transport.pemcert_filepath: node.pem
opendistro_security.ssl.transport.pemkey_filepath: node-key.pem
opendistro_security.ssl.transport.pemtrustedcas_filepath: root-ca.pem
opendistro_security.ssl.http.enabled: true
opendistro_security.ssl.http.pemcert_filepath: node.pem
opendistro_security.ssl.http.pemkey_filepath: node-key.pem
opendistro_security.ssl.http.pemtrustedcas_filepath: root-ca.pem

#xpack.security.authc.token.enabled: true
#
#xpack.security.authc.realms.oidc.oidc1:
#  order: 1
#  rp.client_id: "{{ kibana_domain }}"
#  rp.response_type: code
#  rp.redirect_uri: "{{ kibana_url }}api/security/oidc/callback"
#  op.issuer: "{{ keycloak_url }}auth/realms/master"
#  op.authorization_endpoint: "{{ keycloak_url }}auth/realms/master/protocol/openid-connect/auth"
#  op.token_endpoint: "{{ keycloak_url }}auth/realms/master/protocol/openid-connect/token"
#  op.jwkset_path: "{{ keycloak_url }}auth/realms/master/protocol/openid-connect/certs"
#  op.userinfo_endpoint: "{{ keycloak_url }}auth/realms/master/protocol/openid-connect/userinfo"
#  op.endsession_endpoint: "{{ keycloak_url }}auth/realms/master/protocol/openid-connect/logout"
#  rp.post_logout_redirect_uri: "{{ kibana_url }}logged_out"
#  claims.principal: sub
#  claims.groups: "http://example.info/claims/groups"
